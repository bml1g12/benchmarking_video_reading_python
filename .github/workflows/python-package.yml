# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Checkout github repo (+ download lfs dependencies)
      uses: actions/checkout@v2
      with:
        lfs: true
    - name: Checkout LFS objects
      run: git lfs checkout
    - name: Install dependencies
      run: |
        # ffmpeg related
        sudo add-apt-repository ppa:savoury1/ffmpeg4 && apt-get update -y && sudo apt-get install ffmpeg libsm6 libxrender-dev libgstreamer1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good libavcodec-dev libavformat-dev libavdevice-dev 

        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
        python -m pip install -e .
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Lint with pylint
      run: |
        pylint video_reading_benchmarks/
    - name: Run the benchmarks software
      run: |
        ./ci.sh
